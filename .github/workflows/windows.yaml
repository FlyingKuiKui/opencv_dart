name: windows

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

jobs:
  windows:
    name: windows
    runs-on: windows-2019
    strategy:
      matrix:
        arch: [x64]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: robinraju/release-downloader@v1.10
        with:
          repository: "rainyl/opencv.full"
          latest: true
          fileName: "libopencv-windows-${{ matrix.arch }}.tar.gz"
          out-file-path: "build/opencv"
          extract: true
      - name: build
        run: |
          cd build
          cmake -DCMAKE_INSTALL_PREFIX=install `
          -DCMAKE_BUILD_TYPE=Release `
          -DCVD_PLATFORM_INSTALL_DIR="${{ github.workspace }}/windows" `
          -DOpenCV_DIR=${{ github.workspace }}/build/opencv ..

          cmake --build . --config Release -j $(nproc)
          cmake --build . --config Release --target install
      - name: package
        run: |
          tar -C build/install -zcvf libopencv_dart-windows-${{ matrix.arch }}.tar.gz .
      - uses: actions/upload-artifact@v4
        name: upload
        with:
          path: libopencv_dart-windows-${{ matrix.arch }}.tar.gz
          name: libopencv_dart-windows-${{ matrix.arch }}.tar.gz
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: test
        run: |
          $env:PATH = "$env:PATH;${{github.workspace}}\windows"
          dart pub get
          dart test -x no-local-files
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          prerelease: false
          files: |
            libopencv_dart-windows-${{ matrix.arch }}.tar.gz
  coverage:
    name: coverage
    needs: windows
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: download
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: libopencv_dart-windows-x64.tar.gz
          merge-multiple: false
      - name: extract
        run: |
          tar -xzvf ${{github.workspace}}/artifacts/libopencv_dart-windows-x64.tar.gz -C windows
      - uses: robinraju/release-downloader@v1.10
        with:
          repository: "rainyl/opencv_dart"
          tag: "dnn_test_files"
          fileName: "models.zip"
          out-file-path: "test/"
          extract: true
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: test coverage
        run: |
          cd "${{github.workspace}}"
          ls windows
          $env:PATH="${{github.workspace}}\windows;$env:PATH"
          dart pub global activate coverage
          dart pub global run coverage:test_with_coverage --package . --package-name opencv_dart
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: rainyl/opencv_dart
          file: ./coverage/lcov.info
